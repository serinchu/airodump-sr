#ifndef RADIOTAP_H
#define RADIOTAP_H

/*
 * copyright
 * https://github.com/radiotap/radiotap-library/blob/master/radiotap.h
 */
#include "config.h"

typedef struct _radiotap_h {
    uint8_t  version;
    uint8_t  pad;
    uint16_t len;
    uint32_t present;
} radiotap_h;


enum ieee80211_radiotap_presence {
    IEEE80211_RADIOTAP_TSFT = 0,
    IEEE80211_RADIOTAP_FLAGS = 1,
    IEEE80211_RADIOTAP_RATE = 2,
    IEEE80211_RADIOTAP_CHANNEL = 3,
    IEEE80211_RADIOTAP_FHSS = 4,
    IEEE80211_RADIOTAP_DBM_ANTSIGNAL = 5,
    IEEE80211_RADIOTAP_DBM_ANTNOISE = 6,
    IEEE80211_RADIOTAP_LOCK_QUALITY = 7,
    IEEE80211_RADIOTAP_TX_ATTENUATION = 8,
    IEEE80211_RADIOTAP_DB_TX_ATTENUATION = 9,
    IEEE80211_RADIOTAP_DBM_TX_POWER = 10,
    IEEE80211_RADIOTAP_ANTENNA = 11,
    IEEE80211_RADIOTAP_DB_ANTSIGNAL = 12,
    IEEE80211_RADIOTAP_DB_ANTNOISE = 13,
    IEEE80211_RADIOTAP_RX_FLAGS = 14,
    IEEE80211_RADIOTAP_TX_FLAGS = 15,
    IEEE80211_RADIOTAP_RTS_RETRIES = 16,
    IEEE80211_RADIOTAP_DATA_RETRIES = 17,
    IEEE80211_RADIOTAP_MCS = 19,
    IEEE80211_RADIOTAP_AMPDU_STATUS = 20,
    IEEE80211_RADIOTAP_VHT = 21,
    IEEE80211_RADIOTAP_TIMESTAMP = 22,
    IEEE80211_RADIOTAP_HE = 23,
    IEEE80211_RADIOTAP_HE_MU = 24,
    IEEE80211_RADIOTAP_HE_OTHER_USER = 25,
    IEEE80211_RADIOTAP_0_LEN_PSDU = 26,
    IEEE80211_RADIOTAP_L_SIG = 27,

    IEEE80211_RADIOTAP_RADIOTAP_NAMESPACE = 29,
    IEEE80211_RADIOTAP_VENDOR_NAMESPACE = 30,
    IEEE80211_RADIOTAP_EXT = 31
};

struct radiotap_align_size {
    uint8_t size;
    uint8_t align;
};

const struct radiotap_align_size rtap_namespace_sizes[] = {
{ 8, 8 },    //IEEE80211_RADIOTAP_TSFT 0
{ 1, 1 },    //IEEE80211_RADIOTAP_FLAGS 1
{ 1, 1 },    //IEEE80211_RADIOTAP_RATE 2
{ 2, 4 },    //IEEE80211_RADIOTAP_CHANNEL 3
{ 2, 2 },    //IEEE80211_RADIOTAP_FHSS 4
{ 1, 1 },    //IEEE80211_RADIOTAP_DBM_ANTSIGNAL 5
{ 1, 1 },    //IEEE80211_RADIOTAP_DBM_ANTNOISE 6
{ 2, 2 },    //IEEE80211_RADIOTAP_LOCK_QUALITY 7
{ 2, 2 },    //IEEE80211_RADIOTAP_TX_ATTENUATION 8
{ 2, 2 },    //IEEE80211_RADIOTAP_DB_TX_ATTENUATION 9
{ 1, 1 },    //IEEE80211_RADIOTAP_DBM_TX_POWER 10
{ 1, 1 },    //IEEE80211_RADIOTAP_ANTENNA 11
{ 1, 1 },    //IEEE80211_RADIOTAP_DB_ANTSIGNAL 12
{ 1, 1 },    //IEEE80211_RADIOTAP_DB_ANTNOISE 13
{ 2, 2 },    //IEEE80211_RADIOTAP_RX_FLAGS 14
{ 2, 2 },    //IEEE80211_RADIOTAP_TX_FLAGS 15
{ 1, 1 },    //IEEE80211_RADIOTAP_RTS_RETRIES 16
{ 1, 1 },    //IEEE80211_RADIOTAP_DATA_RETRIES 17
//{},
{ 1, 3 },    //IEEE80211_RADIOTAP_MCS 19
{ 4, 8 },    //IEEE80211_RADIOTAP_AMPDU_STATUS 20
{ 2, 12},    //IEEE80211_RADIOTAP_VHT 21
{ 8, 12},    //IEEE80211_RADIOTAP_TIMESTAMP 22
//{},
//{},
//{},
{ 1, 1 },    //IEEE80211_RADIOTAP_0_LEN_PSDU 26
{ 2, 2 },    //IEEE80211_RADIOTAP_L_SIG 27
};

int8_t get_pwr_from_radiotap(radiotap_h *);

#endif // RADIOTAP_H
